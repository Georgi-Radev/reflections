How did viewing a diff between two versions of a file help you see the bug that was introduced?
    Helps me to find errors in the newer version.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
    Helps me trace the entire workflow relating to the concept of the file. This will help me finding bugs and reverting to better working solutions used previously.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
    Pros: Allows us to flexibly group logical changes in a commit.
	Cons: We must think about size of commits, their frequency etc.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
    Git gives an opportunity to group a logical change spanning these files in one commit.

How can you use the commands git log and git diff to view the history of files?
    git log prints the history of repositiry's commits.
	git diff compares two different commits by their IDs.

How might using version control make you more confident to make changes that could break something?
    I'm confident that if I break something, I could easily revert to a correctly working version, so I can make some risky changes without trouble.

Now that you have your workspace set up, what do you want to try using Git for?
    Managing the code in a real project.
